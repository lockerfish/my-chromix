#!/bin/bash

IFS=','
pkg_name=''

#-----------------------------------------------------------#
#                         Packages                          #
#-----------------------------------------------------------#
# list all debian based packages to install
apt_packages=(
  'git',
  'gnupg2',
  'nodejs',
  'python-pip',
  'python-pygments',
  'ffmpeg',
  'blender',
  'gimp',
  'lighttpd',
  'jekyll',
  'most',
  'multitail',
  'htop',
  'mtr',
  'pydf',
  'libglu1-mesa', # required by Flutter
  'apt-transport-https', # required by Dart
  'dart',
  'code' # NEED Microsoft repo and key
)

#list all npm packages to install
npm_packages=(
  'typescript',
  'nodemon', # automate restarting node
  'localtunnel', # expose localhost applications publicly
  'david', # find out when dependencies aare outdate
  'serve',
  'firebase-tools'
)

#list extra
extras=(
  # Synchronize Settings, Snippets, Themes, File Icons, Launch, Keybindings, Workspaces and Extensions
  # Across Multiple Machines Using GitHub Gist.
  'code --install-extension Shan.code-settings-sync'
)

echo "
/-----------------------------------------------------------/
  Initial updating and upgrading of apt-get
/-----------------------------------------------------------/
"
sudo apt-get -y update
sudo apt -y full-upgrade

#-----------------------------------------------------------#
#                    Repositories and Keys                  #
#-----------------------------------------------------------#
echo "
/-----------------------------------------------------------/
  Adding Google Dart debian package repo and key
  https://www.dartlang.org/tools/sdk#install
  https://flutter.io/setup-linux/#get-sdk
/-----------------------------------------------------------/
"
sudo sh -c 'curl https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -'
sudo sh -c 'curl https://storage.googleapis.com/download.dartlang.org/linux/debian/dart_stable.list > /etc/apt/sources.list.d/dart_stable.list'

echo "
/-----------------------------------------------------------/
  Adding Microsoft VSCode debian package repo and key
  https://code.visualstudio.com/docs/setup/linux
/-----------------------------------------------------------/
"
curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg
sudo mv microsoft.gpg /etc/apt/trusted.gpg.d/microsoft.gpg
sudo sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main" > /etc/apt/sources.list.d/vscode.list'

echo "
/-----------------------------------------------------------/
  Adding Nodesource debian package repo and key
  https://deb.nodesource.com/setup_8.x
/-----------------------------------------------------------/
"
sudo sh -c "curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -"

#-----------------------------------------------------------#
#                        Functions                          #
#-----------------------------------------------------------#
pkg_install() {
  echo "
/-----------------------------------------------------------/
  APT-GET: Installing $pkg_name
/-----------------------------------------------------------/
  "
  dpkg -s $pkg_name >/dev/null 2>&1

  if [ $? -eq 0 ]; then
    echo "$pkg_name: already installed. Updating..."
    sudo apt-get install --only-upgrade $pkg_name
  else
    sudo apt-get install -y $pkg_name
    echo "$pkg_name: is now installed successfully!"
    sudo apt-get -y update
  fi
}

npm_install() {
  echo "
/-----------------------------------------------------------/
  NPM: Installing $pkg_name
/-----------------------------------------------------------/
  "
  npm ls -g $pkg_name >/dev/null 2>&1

  if [ $? -eq 0 ]; then
    echo "$pkg_name: already installed. Updating..."
    sudo npm update -g $pkg_name
  else
    sudo npm install -g $pkg_name
    echo "$pkg_name: is now installed successfully!"
  fi
}

#-----------------------------------------------------------#
#                         Main                              #
#-----------------------------------------------------------#

# install all apt packages
for package in ${apt_packages[*]}; do
  if [ $package ]; then
    pkg_name=$package
    pkg_install
  fi
done

# install all npm packages
for package in ${npm_packages[*]}; do
  if [ $package ]; then
    pkg_name=$package
    npm_install
  fi
done

# execute any additional code
for extra in ${extras[*]}; do
  if [ $extra ]; then
   echo "executing: $extra"
   eval $extra
  fi
done

# clean up
sudo apt-get autoremove
sudo apt-get autoclean

